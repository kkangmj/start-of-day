{"mappings":"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","sources":["node_modules/dotenv/lib/main.js","node_modules/process/browser.js","node_modules/path-browserify/index.js","config/index.js","src/weather.js"],"sourcesContent":["/* @flow */\n/*::\n\ntype DotenvParseOptions = {\n  debug?: boolean\n}\n\n// keys and values from src\ntype DotenvParseOutput = { [string]: string }\n\ntype DotenvConfigOptions = {\n  path?: string, // path to .env file\n  encoding?: string, // encoding of .env file\n  debug?: string // turn on logging for debugging purposes\n}\n\ntype DotenvConfigOutput = {\n  parsed?: DotenvParseOutput,\n  error?: Error\n}\n\n*/\n\nconst fs = require('fs')\nconst path = require('path')\nconst os = require('os')\n\nfunction log (message /*: string */) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nconst NEWLINE = '\\n'\nconst RE_INI_KEY_VAL = /^\\s*([\\w.-]+)\\s*=\\s*(.*)?\\s*$/\nconst RE_NEWLINES = /\\\\n/g\nconst NEWLINES_MATCH = /\\r\\n|\\n|\\r/\n\n// Parses src into an Object\nfunction parse (src /*: string | Buffer */, options /*: ?DotenvParseOptions */) /*: DotenvParseOutput */ {\n  const debug = Boolean(options && options.debug)\n  const obj = {}\n\n  // convert Buffers before splitting into lines and processing\n  src.toString().split(NEWLINES_MATCH).forEach(function (line, idx) {\n    // matching \"KEY' and 'VAL' in 'KEY=VAL'\n    const keyValueArr = line.match(RE_INI_KEY_VAL)\n    // matched?\n    if (keyValueArr != null) {\n      const key = keyValueArr[1]\n      // default undefined or missing values to empty string\n      let val = (keyValueArr[2] || '')\n      const end = val.length - 1\n      const isDoubleQuoted = val[0] === '\"' && val[end] === '\"'\n      const isSingleQuoted = val[0] === \"'\" && val[end] === \"'\"\n\n      // if single or double quoted, remove quotes\n      if (isSingleQuoted || isDoubleQuoted) {\n        val = val.substring(1, end)\n\n        // if double quoted, expand newlines\n        if (isDoubleQuoted) {\n          val = val.replace(RE_NEWLINES, NEWLINE)\n        }\n      } else {\n        // remove surrounding whitespace\n        val = val.trim()\n      }\n\n      obj[key] = val\n    } else if (debug) {\n      log(`did not match key and value when parsing line ${idx + 1}: ${line}`)\n    }\n  })\n\n  return obj\n}\n\nfunction resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options /*: ?DotenvConfigOptions */) /*: DotenvConfigOutput */ {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding /*: string */ = 'utf8'\n  let debug = false\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n    if (options.debug != null) {\n      debug = true\n    }\n  }\n\n  try {\n    // specifying an encoding returns a string instead of a buffer\n    const parsed = parse(fs.readFileSync(dotenvPath, { encoding }), { debug })\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else if (debug) {\n        log(`\"${key}\" is already defined in \\`process.env\\` and will not be overwritten`)\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    return { error: e }\n  }\n}\n\nmodule.exports.config = config\nmodule.exports.parse = parse\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","import dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nconst config = {\r\n    api: {\r\n        weather: process.env.API_KEY\r\n    }\r\n}\r\n\r\nexport default config;\r\n","import CONFIG from \"../config\";\r\n\r\nconst API_KEY = CONFIG.api.weather;\r\nconst COORDS = 'coords';\r\nconst weather = document.querySelector('.js-weather');\r\n\r\nfunction getWeather(lat, lon) {\r\n  fetch(\r\n    `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`,\r\n  )\r\n    .then(function (response) {\r\n      return response.json();\r\n    })\r\n    .then(function (json) {\r\n      const temperature = json.main.temp;\r\n      const place = json.name;\r\n      weather.innerText = `${temperature} @ ${place}`;\r\n    });\r\n}\r\n\r\nfunction saveCoords(coordsObj) {\r\n  localStorage.setItem(COORDS, JSON.stringify(coordsObj));\r\n}\r\n\r\nfunction handleGeoSuccess(position) {\r\n  const latitude = position.coords.latitude;\r\n  const longitude = position.coords.longitude;\r\n  const coordsObj = {\r\n    latitude,\r\n    longitude,\r\n  };\r\n  saveCoords(coordsObj);\r\n  getWeather(latitude, longitude);\r\n}\r\n\r\nfunction handleGeoError() {\r\n  console.log(\"Can't access geolocation\");\r\n}\r\n\r\nfunction askForCoords() {\r\n  navigator.geolocation.getCurrentPosition(handleGeoSuccess, handleGeoError);\r\n}\r\n\r\nfunction loadCoords() {\r\n  const loadedCoords = localStorage.getItem(COORDS);\r\n  if (loadedCoords == null) {\r\n    askForCoords();\r\n  } else {\r\n    const parseCoords = JSON.parse(loadedCoords);\r\n    getWeather(parseCoords.latitude, parseCoords.longitude);\r\n  }\r\n}\r\n\r\nfunction init() {\r\n  loadCoords();\r\n}\r\n\r\ninit();\r\n"],"names":["$9fae7d55c78cb740$export$99c653791dfc1f23","$51c77d2cb787a41a$var$cachedSetTimeout","$51c77d2cb787a41a$var$cachedClearTimeout","$51c77d2cb787a41a$var$process","$51c77d2cb787a41a$exports","$51c77d2cb787a41a$var$defaultSetTimout","Error","$51c77d2cb787a41a$var$defaultClearTimeout","$51c77d2cb787a41a$var$runTimeout","fun","setTimeout","e","call","e1","this","clearTimeout","$51c77d2cb787a41a$var$currentQueue","$51c77d2cb787a41a$var$queue","$51c77d2cb787a41a$var$draining","$51c77d2cb787a41a$var$queueIndex","$51c77d2cb787a41a$var$cleanUpNextTick","length","concat","$51c77d2cb787a41a$var$drainQueue","timeout","len","run","marker","$51c77d2cb787a41a$var$runClearTimeout","$51c77d2cb787a41a$var$Item","array","$51c77d2cb787a41a$var$noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","$d14592787645aa89$var$assertPath","path","TypeError","JSON","stringify","$d14592787645aa89$var$normalizeStringPosix","allowAboveRoot","code","res","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","slice","$d14592787645aa89$var$posix","resolve","resolvedPath","resolvedAbsolute","undefined","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","root","base","$d14592787645aa89$var$_format","parse","ret","isAbsolute1","delimiter","win32","posix","$9fae7d55c78cb740$var$log","message","console","log","$d14592787645aa89$exports","$9fae7d55c78cb740$var$RE_INI_KEY_VAL","$9fae7d55c78cb740$var$RE_NEWLINES","$9fae7d55c78cb740$var$NEWLINES_MATCH","$9fae7d55c78cb740$var$parse","src","options","debug","Boolean","obj","toString","split","forEach","line","idx","keyValueArr","match","key","val","isDoubleQuoted","substring","replace","trim","dotenvPath","encoding","envPath","parsed","$ca967f253c2f1397$exports","readFileSync","Object","keys","hasOwnProperty","error","$9fae7d55c78cb740$export$a43e9d683f52ab7c","$parcel$interopDefault","$9fae7d55c78cb740$exports","config","$976de22d8a0982a6$var$API_KEY","api","weather","$976de22d8a0982a6$var$COORDS","$976de22d8a0982a6$var$weather","document","querySelector","$976de22d8a0982a6$var$getWeather","lat","lon","fetch","then","response","json","temperature","main","temp","place","innerText","$976de22d8a0982a6$var$handleGeoSuccess","position","latitude","coords","longitude","coordsObj","localStorage","setItem","$976de22d8a0982a6$var$saveCoords","$976de22d8a0982a6$var$handleGeoError","$976de22d8a0982a6$var$loadCoords","loadedCoords","getItem","navigator","geolocation","getCurrentPosition","parseCoords"],"version":3,"file":"index.323f7633.js.map"}